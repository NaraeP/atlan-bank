<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.test.bank.ticket.mapper.TicketMapper">
	
	<select id="connectionTest" resultType="Integer">
 		select count(*) from tblBank
 	</select>
	
	<select id="bankList"  resultType="com.test.bank.ticket.domain.BankDTO">
		select * from tblBank
	</select>
	
	<select id="searchedBankList" parameterType="String" resultType="com.test.bank.ticket.domain.BankDTO">
		select * from tblBank where bank_name like '%' || #{location} || '%'
	</select>
	
	<select id="selectStandBy100" parameterType="String" resultType="com.test.bank.ticket.domain.TicketWaitingStatusDTO">
		select count(*) as standby, (count(*)*10) as standbyTime
		from tblTicketWaitingStatus where bank_seq = #{bankSeq} and work_seq = 100
	</select>
	
	<select id="selectStandBy200" parameterType="String" resultType="com.test.bank.ticket.domain.TicketWaitingStatusDTO">
		select count(*) as standby, (count(*)*10) as standbyTime
		from tblTicketWaitingStatus where bank_seq = #{bankSeq} and work_seq = 200
	</select>
	
	<select id="selectStandBy300" parameterType="String" resultType="com.test.bank.ticket.domain.TicketWaitingStatusDTO">
		select count(*) as standby, (count(*)*10) as standbyTime
		from tblTicketWaitingStatus where bank_seq = #{bankSeq} and work_seq = 300
	</select>
	
	<select id="selectStandBy400" parameterType="String" resultType="com.test.bank.ticket.domain.TicketWaitingStatusDTO">
		select count(*) as standby, (count(*)*10) as standbyTime
		from tblTicketWaitingStatus where bank_seq = #{bankSeq} and work_seq = 400
	</select>
	
	<select id="selectWorkList" parameterType="String" resultType="com.test.bank.ticket.domain.WorkListDTO">
		select * from vwWorkList where bank_seq = #{bankSeq} 
	</select>
	
	<select id="getWorkList" parameterType="String" resultType="com.test.bank.ticket.domain.WorkListDTO">
		select * from vwWorkList where bank_seq = #{bankSeq} and work_seq = #{type}
	</select>
	
	<select id="getWaitingNumber" parameterType="String" resultType="integer">
		select coalesce(max(ticket_waiting_status_seq), 0)
		from tblTicketWaitingStatus where bank_seq = #{bankSeq}
	</select>
	
	<insert id="addTicket" parameterType="String">
		insert into tblTicketWaitingStatus (ticket_waiting_status_seq, bank_seq, work_seq, member_seq, regdate, time, is_complete) values
		(nvl((SELECT max(ticket_waiting_status_seq) FROM tblTicketWaitingStatus), 0) + 1, #{bankSeq}, #{type}, 1, default, TO_DATE('9:00', 'HH24:MI'), default)
	</insert>
	
	<insert id="addFavorite" parameterType="String">
		insert into tblBankFavorite (bank_favorite_seq, bank_seq, member_seq) values 
		(nvl((SELECT max(bank_favorite_seq) FROM tblBankFavorite), 0) + 1, #{bankSeq}, 1)
	</insert>
	
	<select id="findFavorite" parameterType="String" resultType="integer">
		select count(*)
		from tblBankFavorite where bank_seq = #{bankSeq} and member_seq = 1
	</select>
	
	<delete id="delFavorite" parameterType="String">
		delete from tblBankFavorite where bank_seq = #{bankSeq} and member_seq = 1
	</delete>
	
	<select id="getfavoriteBanks" parameterType="String" resultType="com.test.bank.ticket.domain.FavoriteBankDTO">
		select b.bank_name as bankName, b.bank_seq as bankSeq
			from tblBank b
			    join tblBankFavorite bf
			        on b.bank_seq = bf.bank_seq
			where bf.member_seq = #{userSeq}
	</select>

	<select id="getTicketList" parameterType="String" resultType="com.test.bank.ticket.domain.TicketWaitingStatusDTO">
		select b.bank_name as bankName, w.work_name as workName, tws.ticket_waiting_status_seq as ticketWaitingStatusSeq, TO_CHAR(tws.regdate,'YYYY/MM/DD') as regdate, TO_CHAR(tws.regdate,'HH24:MI:SS') as time   
		from tblTicketWaitingStatus tws
		    join tblBank b
		        on b.bank_seq = tws.bank_seq
		         join tblWork w
		            on w.work_seq = tws.work_seq
		where tws.member_seq = #{userSeq}
		order by ticketWaitingStatusSeq
	</select>
	
	<delete id="delTicket" parameterType="String">
		delete from tblTicketWaitingStatus where ticket_waiting_status_seq = #{watingSeq}
	</delete>

</mapper>